
#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<process.h>
#include<time.h>
#include<string.h>
using namespace std;
class User
{
public :
   char UserID[15], UserPass[15];
   int ComNum, Howbuy[4], BuyPri,Nowass; 
   // ComNum : 사는 거래소 번호 
   // Howbuy[4] : 어떤 거래소가 얼마나 코인을 살건지 
   //BuyPri : 살때 가격 
   //Nowass : 현재 재산 
   int Regbusi[6][6];  // 비지니스 등록 
   void Regtrans(int playernumber,int BuyComNum,int amtbuystock,char BoS);  // 거래 등록 함수 
   void Printtrans(int playernumber); // 거래 목록 프린트 
   void NowMyStock(int playernumber); //메뉴1 : 현재 플레이어들의 주식 보기 함수 
};

class Company
{
public :
   int ComNum, ComStock, StPri, beforeStPri; 
   // ComNum : 거래소 번호
   // ComStock : 회사 거래량 
   // StPri : 코인 가격 
   //beforeStPri : 어제 코인 가격 
   char ComName[15];
   int StockPricef(int StPri);  //코인 가격 변동 함수 
}; 

void initialize(void);  //거래소, 사용자 초기화 
int PrintMenu(void);  // 회원가입 페이지 
int PrintMenu2(int date); // 멤버 점검 후 출력, 로그인 페이지 
void StoreUser(int count);  // 유저 아이디랑 비번 저장 
int InspUser(int count);  // 유저 점검 
void StockTrans(int playernumber); // 코인거래 함수 
User player[4];
Company Com[4];    //유저와 거래소 선언 
int date =1,transcnt=0;   //date = 턴, transcnt = 거래 카운트 
int workcnt = date;  // workcnt : 거래 후에도 날짜가 같다면 가격 변동 ㄴ 

int main()
{
   int count,inspect,Select;
   count = PrintMenu(); //메뉴 선택란 출력 
   initialize(); //초기화 
   srand(time(NULL));   // 거래 가격 변경 
   StoreUser(count);  
   inspect = InspUser(count);   //inspect = 유저가 로그인했는지 , the result is User number +1, or the result is 0 
   while(inspect)  // 로그인 성공 
   {
      int PN;  //PN = 플레이어 넘버 
      PN = inspect - 1;
      if(Select==4)
      {
         date++;
         workcnt = date;
      }
      Select = PrintMenu2(date);
      switch (Select)  
      {
         case 1 :  //메뉴 1 : 현재 유저의 코인 정보 출력 
            player[PN].NowMyStock(PN);
            break;
         case 2 :  // 메뉴 2 : buy or sell 가능 
            StockTrans(PN);
            workcnt++;
            break;
         case 3 : // 메뉴 3 : 최근 거래 리스트 6개 조회 가능 
            player[PN].Printtrans(PN);            
            break;
         case 4 : // 메뉴 4 : 턴을 1 증가 
            date++;
            workcnt = date;
            Select = PrintMenu2(date);
            break;
         case 5 : // 메뉴 5 : 사용자 변경 
            inspect = InspUser(count);
            break;
         case 6 : // 메뉴 6 : 프로그램 종료 
            inspect = 0;
            break;
      }
   }
   if(!inspect && Select !=6)
      cout << "\n\n\nID 또는 PW가 일치하지 않음. 종료\n";
   return 0;
}

void initialize(void)
{
   for(int i=0;i<4;i++)
   {
      player[i].Howbuy[i] =0;
      player[i].Nowass = 100000;
      Com[i].ComStock = 100;
      Com[i].StPri = 5000;
      Com[i].ComNum  =i+1;
   }  
   strcpy(Com[0].ComName,"거래소1");
}  // 초기화단계


int PrintMenu(void)  //몇명이나 회원 등록할건지 
{ 
   int k;
   char str[30];
   cout << "등록할 회원의 수를 입력하세요(인원제한4명)\t[ ]\b\b";
   gets(str);
   k=atoi(str); // cin 대신 쓴거 
   return k; 
}

int PrintMenu2(int date)  //거래 내역 출력 페이지 
{
   int input;
    char str[30];
   system("cls");
   cout << "\n\t지금은 거래 시작 " << date << " 일째 입니다.\n\n";
   cout << "\t1. 현재보유코인보기\n";
   cout << "\t2. 코인구매/판매\n";
   cout << "\t3. 거래내역보기\n";
   cout << "\t4. 턴종료(날짜이동)\n";
   cout << "\t5. 유저이동\n";
   cout << "\t6. 프로그램 종료\n\n";
   cout << "\t메뉴를 선택하세요\t[ ]\b\b";
    gets(str);  
    input=atoi(str);
   return input;
}

void StoreUser(int count) //회원가입 
{
   int i=0;
   while(i<count)
   {
      system("cls");
      cout << "\t\t회원가입 페이지 입니다.\n";
      cout << " \n 가입할 ID를 입력하세요(영문,숫자조합 8자이내)   ";
      gets(player[i].UserID);
      cout << " 비밀번호를 입력하세요   ";
      gets(player[i].UserPass);
      i++;
   }

}

int InspUser(int count)
{
   int flag,flagP,result,i=0;
   char inspectID[15], inspectPass[15];   
   system("cls");
   cout << " ID를 입력하세요 (단, 대소문자구별 없음)   ";
   gets(inspectID);
   cout << " 비밀번호를 입력하세요   ";
   gets(inspectPass);
   while(i<count)  // 모든 유저 정보 점검 
   {
      flag = stricmp(inspectID,player[i].UserID);
      flagP = stricmp(inspectPass,player[i].UserPass);
      if(flag==0 && flagP==0)  // 로그인 성공 
      {
         result = 1+i;
         break;
      }
	  else //로그인실패 
         result = 0;
      i++;
   }
   return result;
}

int Company :: StockPricef(int StPri)  //보유 stock이 4이상이면 가격오름 
{
   int c;
   for(int i =0;i<4;i++) {
   int playernumber;
   if((player[playernumber].Howbuy[0])>17) // stock이 17개 이상일 경우 가격 상승 
      c = StPri + (rand()%(StPri/10));
   else if((player[playernumber].Howbuy[0])>13&&(player[playernumber].Howbuy[0])<=17)  // stock이 13~17일 경우 가격 상승 
      c = StPri + (rand()%(StPri/10));
	else if((player[playernumber].Howbuy[0])>9&&(player[playernumber].Howbuy[0])<=13)  // stock이 9~13일 경우 가격 상승  
      c = StPri + (rand()%(StPri/10));   
   else if((player[playernumber].Howbuy[0])>5&&(player[playernumber].Howbuy[0])<=9)  // stock이 5~9일 경우 가격 변동 없음 
      c = StPri;
   else  // stock이 5개보다 작을 경우 가격 하락 
      c = StPri-(rand()%(StPri/10));
   return c;
	}
}

void StockTrans(int playernumber)
{
   if(player[playernumber].Nowass >0)
   {
      int BorS,BuyComNum,amtbuystock;
      system("cls");
      cout << "\n\t***************코인관리시스템*****************\n\n";
      cout << "\t\t\t전체시장시세\n\n";
      cout << "번호 거래소명  금일시세  전일시세  등락폭  코인수  거래자금";
      printf("    %s님보유현황\n\n",player[playernumber].UserID);
      for(int i=0;i<1;i++)
      {
         if(workcnt == date)
         {
            Com[i].beforeStPri = Com[i].StPri;
            Com[i].StPri= Com[i].StockPricef(Com[i].StPri); // 같은 턴, 코인 가격 변동 하지 마셈 
         }
         printf("%3d  %s\t%4d%10d",Com[i].ComNum,Com[i].ComName,Com[i].StPri,Com[i].beforeStPri);
         if(Com[i].beforeStPri-Com[i].StPri < 0)  // 가격상승했을경우 
            printf("\t  ▲ ");
         else if(Com[i].beforeStPri-Com[i].StPri == 0)  // 가격변동 없을경우 
            printf("\t  ━ ");
         else  // 가격 하락햇을경우 
            printf("\t  ▼ ");
         printf("%3d%7d    %d",abs(Com[i].beforeStPri -Com[i].StPri), Com[i].ComStock, Com[i].ComStock*Com[i].StPri);
         printf("%12d\n\n",player[playernumber].Howbuy[i]);
      }
      printf("\t%s님 코인구매/판매\n\n",player[playernumber].UserID);
      printf("\t현재 보유코인은 %d원 입니다.\n\n",player[playernumber].Nowass);
      cout << "\t구매하시려면 B를, 매각하시려면 S를 입력하세요\t[ ]\b\b";
      BorS = getchar();
      if(BorS == 'B'|| BorS == 'b')
      {
         cout << "\t-> 사실 거래소의 번호를 눌러주세요.";
         scanf("%d",&BuyComNum);
         cout << "\t-> 얼마만큼의 코인을 보유하시겠습니까?";
         scanf("%d",&amtbuystock);
         cout << "\t";
         if(player[playernumber].Nowass <= 0 || player[playernumber].Nowass < (amtbuystock*Com[BuyComNum-1].StPri))
            cout << "\t그만큼 구매할 수는 없습니다.\n\n\t";
         else
         {
            Com[BuyComNum-1].ComStock = Com[BuyComNum-1].ComStock + amtbuystock;  // 코인 양 +
            player[playernumber].ComNum = BuyComNum - 1;  // 거래소 이름 저장
            player[playernumber].Howbuy[BuyComNum-1] += amtbuystock;  // 코인 양 저장 
            player[playernumber].Nowass -= Com[BuyComNum-1].StPri*amtbuystock;  // 현재 자산 저장 
            transcnt++;  //유저가 코인사는데 성공햇을 시 변수에 +1 
            player[playernumber].Regtrans(playernumber,BuyComNum,amtbuystock,BorS);  // regist transection
         }
      }
	  else if(BorS == 'S' || BorS == 's')
      {
         cout << "\t-> 팔 거래소의 번호를 눌러주세요.";
         scanf("%d",&BuyComNum);
         cout << "\t-> 얼마만큼의 코인을 팔겠습니까?";
         scanf("%d",&amtbuystock);      
         if(player[playernumber].Howbuy[BuyComNum-1] < amtbuystock)
            cout << "\t그만큼 팔 수는 없습니다.\n\n\t";
         else
         {
            Com[BuyComNum-1].ComStock = Com[BuyComNum-1].ComStock - amtbuystock;   // 코인 양 - 
            player[playernumber].ComNum = BuyComNum - 1; 
            player[playernumber].Howbuy[BuyComNum-1] -= amtbuystock;  
            player[playernumber].Nowass += Com[BuyComNum-1].StPri*amtbuystock;  
            transcnt++; // 유저가 코인 파는데 성공했을 시 이 변수에 +1 
            player[playernumber].Regtrans(playernumber,BuyComNum,amtbuystock,BorS);  
         }   
      }
	  else
        cout << "잘못입력하셨습니다. 메뉴화면으로 이동합니다.\n\n\t";
    	system("pause");
   }
   else{
      	cout << "\n\t돈을 가지고 있지 않습니다. 메뉴화면으로 이동합니다.\n\n\t";
      	system("pause");
   }
}

void User :: Regtrans(int playernumber,int BuyComNum,int amtbuystock,char BoS)
{   
   if(transcnt<=6)
   {
      player[playernumber].Regbusi[5-(transcnt-1)][0]=date;// 거래 턴 
      player[playernumber].Regbusi[5-(transcnt-1)][1]=BuyComNum;// 거래소 번호 
      player[playernumber].Regbusi[5-(transcnt-1)][2]=Com[BuyComNum-1].StPri;// 코인 가격 
      player[playernumber].Regbusi[5-(transcnt-1)][3]=amtbuystock;// 코인 양 
      player[playernumber].Regbusi[5-(transcnt-1)][4]=Com[BuyComNum-1].StPri*amtbuystock;//코인가격 * 양 
      player[playernumber].Regbusi[5-(transcnt-1)][5]=BoS;// Buy 또는 sell 
   }
   else{
      for(int a=4;a>=0;a--)  //array[0]~[4]를 array[1]~[5]에 할당 
      {
         for(int b=0;b<6;b++)
    	 player[playernumber].Regbusi[a][b] = player[playernumber].Regbusi[a+1][b]; 
      }
      player[playernumber].Regbusi[0][0]=date;
      player[playernumber].Regbusi[0][1]=BuyComNum;
      player[playernumber].Regbusi[0][2]=Com[BuyComNum-1].StPri;
      player[playernumber].Regbusi[0][3]=amtbuystock;
      player[playernumber].Regbusi[0][4]=Com[BuyComNum-1].StPri*amtbuystock;
      player[playernumber].Regbusi[0][5]=BoS;
   }
}

void User :: Printtrans(int playernumber)  //거래 레지스터 
{
   system("cls");
   cout << "\t**************코인관리시스템입니다********************\n\n";
   printf("\t%s님 거래내역보기\n\n\n",player[playernumber].UserID);
   cout << " 거래턴  거래소명 당시코인금액 당시거래주 거래금액 구매/판매여부\n\n";
   if(transcnt)
   {
      if(transcnt <=6) // 거래 정보를 담고 있는  열만 출력 
      {
         for(int m=(5-(transcnt-1));m<=5;m++)
         {
            for(int n=0;n<6;n++)
            {
               if(n==1)
                  printf("%s  ",Com[player[playernumber].Regbusi[m][1]-1].ComName);
               else if(n==5)
               {
                  if(player[playernumber].Regbusi[m][5]==66 || player[playernumber].Regbusi[m][5]==98)
                    {
                 cout << "  구매\n";
                    }
              else
                        {
                     cout << "  매각\n";
                    }
               }
               else
                  cout << "    " << player[playernumber].Regbusi[m][n] <<"    ";
            }
            cout << "\n";
         }
      }
	  else{  // 모든 배열 출 력 
         for(int s=0;s<6;s++)
         {
            for(int t=0;t<6;t++)
            {
               if(t==1)
                  printf("%s  ",Com[player[playernumber].Regbusi[s][1]-1].ComName);
               else if(t==5)
               {
                  if(player[playernumber].Regbusi[s][5]==66 || player[playernumber].Regbusi[s][5]==98)
                     cout << "  구매\n";
                  else
                     cout << "  매각\n";
               }
               else
                  cout << "    " << player[playernumber].Regbusi[s][t] <<"    ";
            }
            cout << "\n";
         }
      }     
   }else
      cout << "\n\n\t\t 아직 거래내역이 없습니다.\n\n\t\t";
   	  system("pause");
}

void User ::NowMyStock(int playernumber)   // 현재 유저가 가지고 있는 코인 
{
   system("cls");
   cout << " **************코인관리 시스템******************\n\n";
   printf("1. %s님 현재보유코인보기\n",player[playernumber].UserID);
   cout << " 거래소명  보유수량  전날코인금액  현재코인금액  현재손익(전날대비)  현 보유자산   카운트  \n\n\n";
   if(transcnt)
   {
      for(int i =0;i<4;i++)//거래소 이름 출력 array 4로 지정하였으나 활용되지 않음 
      {
        if(Com[i].ComNum ==1)
        {
            printf("%s  ",Com[i].ComName);
        }
       else if(Com[i].ComNum ==2)
      	{
            printf("%s  ",Com[i].ComName); 
      	}
         else if(Com[i].ComNum ==3)
        {
            printf("%s  ",Com[i].ComName);
        }
         else
       {   
            printf("%s  ",Com[i].ComName);
        }
         if(player[playernumber].Howbuy[i]==0)  // 사용자가 보유하고 있는 코인이 없을 경우 
            cout << "\t거래소에 대해서 보유하고 있는 코인이 없습니다.\n\n";
         else
         { 
            printf(" %3d %10d %15d",player[playernumber].Howbuy[i], Com[i].beforeStPri, Com[i].StPri);
            printf(" %15d %17d \t %3d \n\n", (Com[i].StPri - Com[i].beforeStPri)*player[playernumber].Howbuy[i], player[playernumber].Nowass, player[playernumber].Howbuy[i]);// Howbuy는 카운트에 해당 
            //마지막 변수 가지고 코인 가격 변경하기 
         }
      }
   } else {  
      cout << "\n\n\t\t거래내역이 없습니다.\n\n\t\t";
	}
   system("pause");
}
